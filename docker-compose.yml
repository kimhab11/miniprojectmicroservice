#version: "3.8"
version: "3.8"

volumes:
  user_data:
  task_data:
  keycloak_data:


x-database-env: &database-env
  POSTGRES_DB: keycloak
  POSTGRES_USER: keycloak
  POSTGRES_PASSWORD: password

x-keycloak-env: &keycloak-env
  DB_VENDOR: POSTGRES
  DB_ADDR: keycloak-database
  DB_DATABASE: keycloak
  DB_USER: keycloak
  DB_SCHEMA: public
  DB_PASSWORD: password
  KEYCLOAK_USER: admin
  KEYCLOAK_PASSWORD: kcpassword
  KEYCLOAK_LOGLEVEL: DEBUG
  #  KEYCLOAK_IMPORT: /opt/realm.json -Dkeycloak.profile.feature.upload_scripts=enabled
  ROOT_LOGLEVEL: DEBUG




services:

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to.
  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
#  zipkin:
#    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
#    container_name: zipkin
#    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
#    environment:
#      - STORAGE_TYPE=mem
#      # Point the zipkin at the storage backend
#      - MYSQL_HOST=mysql
#      # Uncomment to enable self-tracing
#      # - SELF_TRACING_ENABLED=true
#      # Uncomment to increase heap size
#      # - JAVA_OPTS=-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
#    ports:
#      # Port used for the Zipkin UI and HTTP Api
#      - 9411:9411
#    # Uncomment to enable debug logging
#    # command: --logging.level.zipkin2=DEBUG

  keycloak-database:
    image: postgres:14.4-alpine
    restart: unless-stopped
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    container_name: keycloak-database
    healthcheck:
      test: [ "CMD","pg_isready","-U","keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      <<: *database-env
    ports:
      - "2345:5432"

  keycloak-service:
    image: jboss/keycloak:16.1.1
    restart: unless-stopped
    container_name: keycloak-server
    #    volumes:
    #      - ../keycloak/realm.json:/opt/realm.json
    environment:
      <<: *keycloak-env
    ports:
      - "8888:8080"
      - "8443:8443"
    depends_on:
      - keycloak-database
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8080/auth/realms/master"
        ]
      interval: 20s
      timeout: 3s
      start_period: 10s
      retries: 3



  user-database:
    image: postgres:14.4-alpine
    healthcheck:
      test: [ "CMD-SHELL","pg_isready","-U","user" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    container_name: user-database
    ports:
      - "2346:5432"
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: user_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
    volumes:
      - user_data:/var/lib/postgresql/data



  task-database:
    image: postgres:14.4-alpine
    healthcheck:
      test: [ "CMD-SHELL","pg_isready","-U","task" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    container_name: task-database
    ports:
      - "2347:5432"
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: task_db
      POSTGRES_USER: task
      POSTGRES_PASSWORD: task
    volumes:
      - task_data:/var/lib/postgresql/data


